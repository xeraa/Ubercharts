/*
 Copyright 2011 comSysto GmbH

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'



/* This sets the needed maven repositories */
repositories {
    mavenLocal()
    mavenCentral() // The default maven repo
}



/*
  It's a basic concept of Wicket, that html files are located alongside
  Java files within the src folder. The Gradle Java plugin, however, does not
  copy by default those html files to the compile target location.

  The following lines are therefore needed to ensure, that the html files,
  which are located alongside Java files, are copied to the target folder
  alongside the appropriate class files.
*/
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
            srcDir 'src/main/java'
        }
    }
}



configurations {
    deployerJars
}



dependencies {

    /* These are the dependencies, which are needed to compile and run the project. */
    compile(
            [group: 'org.apache.wicket', name: 'wicket', version: '1.5.4'],
            [group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.6.4'],
            [group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.4']
    )

    /* These are the dependencies, which are needed to test the project. */
    testCompile(
            [group: 'junit', name: 'junit', version: '4.10'],
    )

    /* These are dependencies to add the JAR to our own Maven repository. */
    deployerJars(
            [group: 'org.apache.maven.wagon', name: 'wagon-ssh', version: '2.2'],
            [group: 'org.apache.maven.wagon', name: 'wagon-http', version: '2.2'],
            [group: 'org.apache.maven.wagon', name: 'wagon-ftp', version: '2.2'],
            [group: 'org.apache.maven.wagon', name: 'wagon-scm', version: '2.2'],
            [group: 'org.apache.maven.wagon', name: 'wagon-file', version: '2.2'],
            [group: 'org.apache.maven.wagon', name: 'wagon-webdav-jackrabbit', version: '2.2']
    )
}



uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        pom.version = '0.2-SNAPSHOT'
        pom.artifactId = 'ubercharts'
        uniqueVersion = false

        /* $username and $password must be defined in ~/.gradle/gradle.properties or via Jenkins' environmental variables (ORG_GRADLE_PROJECT_username) */
        configureAuth = {
           authentication(userName: username, password: password)
        }

        /* $releaseurl and $snapshoturl must be defined in ~/.gradle/gradle.properties or via Jenkins' environmental variables (ORG_GRADLE_PROJECT_releaseurl)  */
        repository(url: releaseurl, configureAuth)

        snapshotRepository(url: snapshoturl, configureAuth)
    }
}
